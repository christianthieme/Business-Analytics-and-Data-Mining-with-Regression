knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
summary(salary - model$fitted.values)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
nba <- readr::read_csv('https://raw.githubusercontent.com/christianthieme/Business-Analytics-and-Data-Mining-with-Regression/main/nba_data.csv') %>% rename(points = PTS, salary = salary_2017_in_millions)
model <- lm(salary ~ points, data = nba)
summary(model)
summary(salary - model$fitted.values)
summary(nba$salary - model$fitted.values)
hist(nba$salary - model$fitted.values)
model <- lm(log(salary) ~ points, data = nba)
summary(model)
model <- lm(log(salary) ~ log(points), data = nba)
summary(model)
model <- lm(1/(salary) ~ points, data = nba)
summary(model)
model <- lm(ln(salary) ~ points, data = nba)
model <- log10(salary) ~ points, data = nba)
model <- lm(log10(salary) ~ points, data = nba)
summary(model)
model <- lm(log10(salary) ~ log10(points), data = nba)
summary(model)
model <- lm(exp(salary) ~ (points), data = nba)
model <- lm(exp(salary) ~ points, data = nba)
model <- lm(sqrt(salary) ~ points, data = nba)
summary(model)
hist(nba$salary - model$fitted.values, title = "Residuals")
hist(nba$salary - model$fitted.values, main = "Residuals")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
nba <- readr::read_csv('https://raw.githubusercontent.com/christianthieme/Business-Analytics-and-Data-Mining-with-Regression/main/nba_data.csv') %>% rename(points = PTS, salary = salary_2017_in_millions)
model <- lm(salary ~ points, data = nba)
summary(model)
summary(nba$salary - model$fitted.values)
hist(nba$salary - model$fitted.values, main = "Residuals")
model <- lm(sqrt(salary) ~ points, data = nba)
summary(model)
hist(nba$salary - model$fitted.values, main = "Residual Distribution", xlab = "Difference between Actual and Predicted")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
nba <- readr::read_csv('https://raw.githubusercontent.com/christianthieme/Business-Analytics-and-Data-Mining-with-Regression/main/nba_data.csv') %>% rename(points = PTS, salary = salary_2017_in_millions)
model <- lm(salary ~ points, data = nba)
summary(model)
summary(nba$salary - model$fitted.values)
hist(nba$salary - model$fitted.values, main = "Residual Distribution", xlab = "Difference between Actual and Predicted")
model <- lm(sqrt(salary) ~ points, data = nba)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
nba <- readr::read_csv('https://raw.githubusercontent.com/christianthieme/Business-Analytics-and-Data-Mining-with-Regression/main/nba_data.csv') %>% rename(points = PTS, salary = salary_2017_in_millions)
model <- lm(salary ~ points, data = nba)
summary(model)
summary(nba$salary - model$fitted.values)
hist(nba$salary - model$fitted.values, main = "Residual Distribution", xlab = "Difference between Actual and Predicted")
model <- lm(sqrt(salary) ~ points, data = nba)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
training <- readr::read_csv('C:/Users/chris/OneDrive/Master Of Data Science - CUNY/Winter 2021/DATA621/HW1/moneyball-training_data')
training <- readr::read_csv('C:/Users/chris/OneDrive/Master Of Data Science - CUNY/Winter 2021/DATA621/HW1/moneyball-training_data.csv')
training <- readr::read_csv('C:/Users/chris/OneDrive/Master Of Data Science - CUNY/Winter 2021/DATA621/HW1/moneyball-training-data.csv')
training
training <- readr::read_csv('C:/Users/chris/OneDrive/Master Of Data Science - CUNY/Winter 2021/DATA621/HW1/moneyball-training-data.csv')
training
hist(training$TARGET_WINS)
qqnorm(training$TARGET_WINS)
qqline(training$TARGET_WINS)
qqnorm(log(training$TARGET_WINS))
qqnorm(training$TARGET_WINS)
qqline(tra'ining$TARGET_WINS)
qqnorm(training$TARGET_WINS)
qqline(training$TARGET_WINS)
nfl <- training %>%
mutate(logged = log(TARGET_WINS))
qqnorm(nfl$TARGET_WINS)
qqline(nfl$TARGET_WINS)
qqnorm(nfl$logged)
nfl$logged
# qqnorm(nfl$logged)
# qqline(nfl$logged)
nfl <- training %>%
mutate(logged = round(log(TARGET_WINS),0))
# nfl$logged
qqnorm(nfl$logged)
# nfl$logged
qqnorm(nfl$logged)
nfl <- training %>%
mutate(logged = round(log(TARGET_WINS),0))
nfl$logged
# qqnorm(nfl$logged)
# qqline(nfl$logged)
# nfl$logged
qqnorm(nfl$logged)
is.na(nfl$logged)
# qqnorm(nfl$logged)
# qqline(nfl$logged)
nfl %>%
filter(is.na(nfl$logged) == TRUE)
# qqnorm(nfl$logged)
# qqline(nfl$logged)
nfl %>%
filter(is.na(nfl$logged) == FALSE)
# qqnorm(nfl$logged)
# qqline(nfl$logged)
nfl %>%
count('logged')
# qqnorm(nfl$logged)
# qqline(nfl$logged)
nfl %>%
count(logged)
# qqnorm(nfl$logged)
# qqline(nfl$logged)
nfl %>%
filter(logged == -Inf)
# qqnorm(nfl$logged)
# qqline(nfl$logged)
nfl <- training %>%
filter(INDEX != 1347)
mutate(logged = round(log(TARGET_WINS),0))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
training <- readr::read_csv('C:/Users/chris/OneDrive/Master Of Data Science - CUNY/Winter 2021/DATA621/HW1/moneyball-training-data.csv')
training
qqnorm(training$TARGET_WINS)
qqline(training$TARGET_WINS)
nfl <- training %>%
filter(INDEX != 1347)
mutate(logged = round(log(TARGET_WINS),0))
nfl <- training %>%
filter(INDEX != 1347) %>%
mutate(logged = round(log(TARGET_WINS),0))
qqnorm(nfl$logged)
qqline(nfl$logged)
nfl <- training %>%
filter(INDEX != 1347) %>%
mutate(logged = log(TARGET_WINS))
qqnorm(nfl$logged)
qqline(nfl$logged)
data <- training %>% select(-INDEX)
correlation <- cor(data)
target_wins <- as.matrix(abs(correlation[,'TARGET_WINS']))
ordered_matrix <- target_wins[order(target_wins, decreasing = TRUE),]
ordered_matrix
# names <- ordered_matrix[ordered_matrix > 0.45, drop = FALSE]
# names <- rownames(as.matrix(names[!is.na(names)]))
#
# filtered_cor_matrix <- correlation[names, names]
# #sorted_matrix <- filtered_cor_matrix[order(filtered_cor_matrix[,'SalePrice'], decreasing = TRUE),]
#
# corrplot.mixed(filtered_cor_matrix, tl.col="black", tl.pos = "lt")
data <- training %>% select(-INDEX)
correlation <- cor(data)
target_wins <- as.matrix(abs(correlation[,'TARGET_WINS']))
ordered_matrix <- target_wins[order(target_wins, decreasing = TRUE),]
names <- ordered_matrix[ordered_matrix > 00, drop = FALSE]
names <- rownames(as.matrix(names[!is.na(names)]))
filtered_cor_matrix <- correlation[names, names]
#sorted_matrix <- filtered_cor_matrix[order(filtered_cor_matrix[,'SalePrice'], decreasing = TRUE),]
corrplot.mixed(filtered_cor_matrix, tl.col="black", tl.pos = "lt")
library(tidyverse)
library(corrplot)
data <- training %>% select(-INDEX)
correlation <- cor(data)
target_wins <- as.matrix(abs(correlation[,'TARGET_WINS']))
ordered_matrix <- target_wins[order(target_wins, decreasing = TRUE),]
names <- ordered_matrix[ordered_matrix > 00, drop = FALSE]
names <- rownames(as.matrix(names[!is.na(names)]))
filtered_cor_matrix <- correlation[names, names]
#sorted_matrix <- filtered_cor_matrix[order(filtered_cor_matrix[,'SalePrice'], decreasing = TRUE),]
corrplot.mixed(filtered_cor_matrix, tl.col="black", tl.pos = "lt")
data <- training %>% select(-INDEX)
correlation <- cor(data)
target_wins <- as.matrix(abs(correlation[,'TARGET_WINS']))
ordered_matrix <- target_wins[order(target_wins, decreasing = TRUE),]
names <- ordered_matrix[ordered_matrix > 00, drop = FALSE]
names <- rownames(as.matrix(names[!is.na(names)]))
filtered_cor_matrix <- correlation[names, names]
#sorted_matrix <- filtered_cor_matrix[order(filtered_cor_matrix[,'SalePrice'], decreasing = TRUE),]
corrplot.mixed(filtered_cor_matrix, tl.col="black", tl.pos = "lt")
data <- training %>% select(-INDEX)
correlation <- cor(data)
target_wins <- as.matrix(abs(correlation[,'TARGET_WINS']))
ordered_matrix <- target_wins[order(target_wins, decreasing = TRUE),]
names <- ordered_matrix[ordered_matrix > 00, drop = FALSE]
names <- rownames(as.matrix(names[!is.na(names)]))
filtered_cor_matrix <- correlation[names, names]
#sorted_matrix <- filtered_cor_matrix[order(filtered_cor_matrix[,'SalePrice'], decreasing = TRUE),]
corrplot.mixed(filtered_cor_matrix, tl.col="black", tl.pos = "lt")
